class Solution {             //为何没有返回数组   //因为需要构建平衡二叉搜索树，表面上示例是数组，实则是一个个树节点
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        return helper(nums, 0, nums.size() - 1);
    }

    TreeNode* helper(vector<int>& nums, int left, int right) {
        if (left > right) {   当 left <= right 时，子数组中至少还有一个元素，因此可以继续递归处理。
            return nullptr;
        }

        // 总是选择中间位置左边的数字作为根节点
        int mid = (left + right) / 2;

        TreeNode* root = new TreeNode(nums[mid]);     //new TreeNode();而非中括号
        root->left = helper(nums, left, mid - 1);
        root->right = helper(nums, mid + 1, right);
        return root;                                  //按递归顺序return root，不要被示例的数组蒙骗
    }
};
