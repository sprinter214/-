int maxProfit(vector<int>& prices) {
        int n=prices.size();
        if(n<=1)
        return 0;
         int max=prices[1]-prices[0];
        for(int i=0;i<n-1;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                int cur=prices[j]-prices[i];
                if(cur>max)
                max=cur;
            }
        }
        if(max<0)
        max=0;
        return max;
    } /////////////////////////////////////////初版(暴力算法)  超出时间限制dame 时间复杂度O(n);

int maxProfit(vector<int>& prices) {  /////////////////////运用c++自带的比较函数，一个循环解决
        int n=prices.size();
        int inf=1e9;
    int minprice=inf,maxProfit=0;
    for(int i=0;i<n;i++)
    {
        maxProfit=max(maxProfit,prices[i]-minprice);
        minprice=min(minprice,prices[i]);
    }
    return maxProfit;
    }
