class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {  //广度优先搜索（队列）
    if(root==nullptr)
    return {};
    queue<TreeNode*> q;     ///创建树节点的队列需要加*号
    vector<int> ans;
    q.push(root);         //队列增加
    while(!q.empty()) //开始搜索 //退出条件为当下一层全为空时
    {
        int length=q.size();
        for(int i=0;i<length;i++)
        {
            TreeNode* node=q.front();
            q.pop();
            if(i==length-1)
            {
                ans.push_back(node->val);
            }
            if(node->left!=nullptr)
            {
                q.push(node->left);
            }
            if(node->right!=nullptr)
            {
                q.push(node->right);
            }
        }
    }
    return ans;
}
};
